name: Integración continua ramas feature y fix
on:
  push:
    branches: [ feature/*, hotfix/* ]
  pull_request:
    types: [opened, edited, synchronize]
jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:

    - name: Checkout de repositorio
      uses: actions/checkout@v3

    - name: Configuración de entorno de python
      uses: actions/setup-python@v2
      with:
          python-version: '3.10'

    - name: Instalación de librerías y dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Correr pruebas y generar cobertura
      id: correr-pruebas-cubrimiento
      run: |
        coverage run -m pytest
        coverage report -m

    - name: Validar resultado con errores
      id: error
      if: ${{ failure() }}
      env:
        MENSAJE_ERROR: Una o varias pruebas fallaron
      run: echo "Una o varias pruebas fallaron"

    - name: Validar umbral de cobertura
      id: cobertura
      if: ${{ success() }}
      run: |
        COVERAGE=$(coverage report | tail -n 1 | awk '{print $4}' | sed 's/%//')  # Extrae el porcentaje de cobertura
        echo "Cobertura de código: $COVERAGE%"
        if [ "$COVERAGE" -lt 70 ]; then
          echo "La cobertura de código es menor al 70%. El pipeline ha fallado."
          exit 1
        fi