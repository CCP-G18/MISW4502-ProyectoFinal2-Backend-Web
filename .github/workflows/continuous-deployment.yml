name: Despliegue Continuo Backend

on:
  push:
    branches: [ "main" ]

jobs:
  discover-services:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.set-matrix.outputs.services }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Descubrir microservicios en src/
        id: set-matrix
        run: |
          services=$(find src -mindepth 1 -maxdepth 1 -type d -exec test -f "{}/Dockerfile" \; -print | xargs -n 1 basename)
          services_json=$(echo "${services}" | jq -R -s -c 'split("\n")[:-1]')
          echo "services=${services_json}" >> $GITHUB_OUTPUT

  build-and-deploy:
    needs: discover-services
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.discover-services.outputs.services) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Autenticarse en Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Instalar Google Cloud SDK y Plugin de Autenticación
        run: |
          sudo apt-get update -y
          sudo apt-get install -y apt-transport-https ca-certificates gnupg curl
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee /etc/apt/sources.list.d/google-cloud-sdk.list
          sudo apt-get update -y
          sudo apt-get install -y google-cloud-cli google-cloud-cli-gke-gcloud-auth-plugin

      - name: Configurar kubectl
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} --region ${{ secrets.GCP_REGION }} --project ${{ secrets.GCP_PROJECT }}
          kubectl version

      - name: Configurar Docker para Artifact Registry
        run: |
          gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

      - name: Leer versión del microservicio
        id: version
        run: |
          VERSION=$(cat src/${{ matrix.service }}/version)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          IMAGE_TAG=${{ env.VERSION }}
          docker build -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/uniandes-misw-proyecto-final/${{ matrix.service }}:${IMAGE_TAG} -f src/${{ matrix.service }}/Dockerfile src/${{ matrix.service }}
          docker tag ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/uniandes-misw-proyecto-final/${{ matrix.service }}:${IMAGE_TAG} ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/uniandes-misw-proyecto-final/${{ matrix.service }}:latest

      - name: Push Docker image to Artifact Registry
        run: |
          docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/uniandes-misw-proyecto-final/${{ matrix.service }}:${{ env.VERSION }}
          docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/uniandes-misw-proyecto-final/${{ matrix.service }}:latest

      - name: Configurar kubectl
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} --region ${{ secrets.GCP_REGION }} --project ${{ secrets.GCP_PROJECT }}
          kubectl version

      - name: Configurar kubectl
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} --region ${{ secrets.GCP_REGION }} --project ${{ secrets.GCP_PROJECT }}
          kubectl version

      - name: Desplegar BackendConfig
        run: |
          kubectl apply -f deployment/${{ matrix.service }}-app/backendconfig.yml

      - name: Desplegar Deployment (Crear si no existe)
        run: |
          kubectl apply -f deployment/${{ matrix.service }}-app/deployment.yml
      
      - name: Actualizar imagen del Deployment
        run: |
          kubectl set image deployment/${{ matrix.service }}-app ${matrix.service}-app=${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/uniandes-misw-proyecto-final/${{ matrix.service }}:${{ env.VERSION }} -n default

      - name: Desplegar Service
        run: |
          kubectl apply -f deployment/${{ matrix.service }}-app/service.yml

      - name: Desplegar Ingress
        run: |
          kubectl apply -f deployment/ingress/gateway-ingress.yml
